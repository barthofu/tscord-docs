"use strict";(self.webpackChunktscord_docs=self.webpackChunktscord_docs||[]).push([[9815],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},55421:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:2},i="Migrations",s={unversionedId:"bot/features/database/migrations",id:"version-2.4/bot/features/database/migrations",title:"Migrations",description:"The synchronization between Entities definition files and actual tables in the database is handled by the MikroORM's migrations system.",source:"@site/versioned_docs/version-2.4/bot/features/database/migrations.mdx",sourceDirName:"bot/features/database",slug:"/bot/features/database/migrations",permalink:"/docs/bot/features/database/migrations",draft:!1,editUrl:"https://github.com/barthofu/tscord-docs/tree/main/versioned_docs/version-2.4/bot/features/database/migrations.mdx",tags:[],version:"2.4",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"ORM",permalink:"/docs/bot/features/database/orm"},next:{title:"Sync",permalink:"/docs/bot/features/database/sync"}},l={},u=[{value:"Troubleshooting",id:"troubleshooting",level:2}],d={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"migrations"},"Migrations"),(0,r.kt)("p",null,"The synchronization between Entities definition files and actual tables in the database is handled by the MikroORM's migrations system."),(0,r.kt)("p",null,"Indeed, in order to apply on the database all the changes of your Entities classes, you must generate ",(0,r.kt)("em",{parentName:"p"},"migrations")," JS files.\nThey contain all the SQL statements needed to modify the current database state in order to match with the newly modified Entities classes, without losing any data."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Migration files should be versioned as it permit to rollback to a certain state of your database.")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"To generate a migration file, simply do this command in the root of your project:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run migration:create\n")),(0,r.kt)("p",null,"Then, to apply it to the database:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm run migration:up\n")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"When using SQLite, if you encounter this error: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"SQLITE_ERROR: Cannot add a NOT NULL column with default value NULL\n")),(0,r.kt)("p",null,"It means that you are trying to add a column without any default value to an already existing table. ",(0,r.kt)("br",null),"\nIt is a behavior inherent to SQLite."),(0,r.kt)("p",null,"In order to fix this, you should define a default value in the options of the ",(0,r.kt)("inlineCode",{parentName:"p"},"@Property()")," decorator like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"    @Property({ default: 'John Doe' })\n    name: string\n")),(0,r.kt)("p",null,"as explained in more details ",(0,r.kt)("a",{parentName:"p",href:"/docs/bot/features/database/orm#default-values"},"here")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/barthofu/tscord/issues/76"},"here"),"."))}c.isMDXComponent=!0}}]);