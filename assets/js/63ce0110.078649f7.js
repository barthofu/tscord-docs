"use strict";(self.webpackChunktscord_docs=self.webpackChunktscord_docs||[]).push([[1457],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(n),u=o,h=p["".concat(s,".").concat(u)]||p[u]||m[u]||r;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var d=2;d<r;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(67294),o=n(86010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(87462),o=n(67294),r=n(86010),l=n(72389),i=n(67392),s=n(7094),d=n(12466);const c="tabList__CuJ",m="tabItem_LNqP";function p(e){var t;const{lazy:n,block:l,defaultValue:p,values:u,groupId:h,className:b}=e,k=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=u??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),g=(0,i.l)(f,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===p?p:p??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,s.U)(),[x,C]=(0,o.useState)(v),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,d.o5)();if(null!=h){const e=y[h];null!=e&&e!==x&&f.some((t=>t.value===e))&&C(e)}const w=e=>{const t=e.currentTarget,n=T.indexOf(t),a=f[n].value;a!==x&&(O(t),C(a),null!=h&&N(h,String(a)))},j=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":l},b)},f.map((e=>{let{value:t,label:n,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>T.push(e),onKeyDown:j,onFocus:w,onClick:w},l,{className:(0,r.Z)("tabs__item",m,null==l?void 0:l.className,{"tabs__item--active":x===t})}),n??t)}))),n?(0,o.cloneElement)(k.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function u(e){const t=(0,l.Z)();return o.createElement(p,(0,a.Z)({key:String(t)},e))}},51661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var a=n(87462),o=(n(67294),n(3905)),r=n(65488),l=n(85162);const i={sidebar_position:1},s="Interactions",d={unversionedId:"bot/discord/interactions",id:"bot/discord/interactions",title:"Interactions",description:"TSCord uses decorators from discordx to handle interactions.",source:"@site/docs/bot/discord/interactions.mdx",sourceDirName:"bot/discord",slug:"/bot/discord/interactions",permalink:"/docs/next/bot/discord/interactions",draft:!1,editUrl:"https://github.com/barthofu/tscord-docs/tree/main/docs/bot/discord/interactions.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Update and migrations",permalink:"/docs/next/bot/get-started/update"},next:{title:"Events",permalink:"/docs/next/bot/discord/events"}},c={},m=[{value:"Here is a relevant list of them, linked to the corresponding discordx documentation:",id:"here-is-a-relevant-list-of-them-linked-to-the-corresponding-discordx-documentation",level:4},{value:"@Slash",id:"slash",level:3},{value:"@SlashChoice",id:"slashchoice",level:4},{value:"@SlashGroup",id:"slashgroup",level:4},{value:"@SlashOption",id:"slashoption",level:4},{value:"@SimpleCommand",id:"simplecommand",level:3},{value:"@SimpleCommandOption",id:"simplecommandoption",level:4},{value:"@ButtonComponent",id:"buttoncomponent",level:3},{value:"@ContextMenu",id:"contextmenu",level:3},{value:"@ModalComponent",id:"modalcomponent",level:3},{value:"@SelectMenuComponent",id:"selectmenucomponent",level:3},{value:"Responding to interactions",id:"responding-to-interactions",level:2},{value:"Built-in commands",id:"built-in-commands",level:2}],p={toc:m};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"interactions"},"Interactions"),(0,o.kt)("p",null,"TSCord uses decorators from ",(0,o.kt)("inlineCode",{parentName:"p"},"discordx")," to handle interactions."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Because the template is overriding the default behavior of some of these decorators, you should ",(0,o.kt)("strong",{parentName:"p"},"always")," import them from ",(0,o.kt)("inlineCode",{parentName:"p"},"@/decorators")," rather than ",(0,o.kt)("inlineCode",{parentName:"p"},"discordx"),"! ")),(0,o.kt)("h4",{id:"here-is-a-relevant-list-of-them-linked-to-the-corresponding-discordx-documentation"},"Here is a relevant list of them, linked to the corresponding discordx documentation:"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"commands",label:"Commands",mdxType:"TabItem"},(0,o.kt)("h3",{id:"slash"},(0,o.kt)("a",{parentName:"h3",href:"https://discordx.js.org/docs/decorators/commands/slash"},"@Slash")),(0,o.kt)("h4",{id:"slashchoice"},(0,o.kt)("a",{parentName:"h4",href:"https://discordx.js.org/docs/decorators/commands/slash-choice"},"@SlashChoice")),(0,o.kt)("h4",{id:"slashgroup"},(0,o.kt)("a",{parentName:"h4",href:"https://discordx.js.org/docs/decorators/commands/slash-group"},"@SlashGroup")),(0,o.kt)("h4",{id:"slashoption"},(0,o.kt)("a",{parentName:"h4",href:"https://discordx.js.org/docs/decorators/commands/slash-option"},"@SlashOption")),(0,o.kt)("h3",{id:"simplecommand"},(0,o.kt)("a",{parentName:"h3",href:"https://discordx.js.org/docs/decorators/commands/simple-command"},"@SimpleCommand")),(0,o.kt)("h4",{id:"simplecommandoption"},(0,o.kt)("a",{parentName:"h4",href:"https://discordx.js.org/docs/decorators/commands/simple-command-option"},"@SimpleCommandOption"))),(0,o.kt)(l.Z,{value:"gui",label:"GUI Interactions",mdxType:"TabItem"},(0,o.kt)("h3",{id:"buttoncomponent"},(0,o.kt)("a",{parentName:"h3",href:"https://discordx.js.org/docs/decorators/gui/button-component"},"@ButtonComponent")),(0,o.kt)("h3",{id:"contextmenu"},(0,o.kt)("a",{parentName:"h3",href:"https://discordx.js.org/docs/decorators/gui/context-menu"},"@ContextMenu")),(0,o.kt)("h3",{id:"modalcomponent"},(0,o.kt)("a",{parentName:"h3",href:"https://discordx.js.org/docs/decorators/gui/modal-component"},"@ModalComponent")),(0,o.kt)("h3",{id:"selectmenucomponent"},(0,o.kt)("a",{parentName:"h3",href:"https://discordx.js.org/docs/decorators/gui/select-menu-component"},"@SelectMenuComponent")))),(0,o.kt)("h2",{id:"responding-to-interactions"},"Responding to interactions"),(0,o.kt)("p",null,"TSCord is ",(0,o.kt)("a",{parentName:"p",href:"https://discordjs.guide/slash-commands/response-methods.html#deferred-responses"},"deferring")," every command interaction (slashes and context menus) by default, so you should use ",(0,o.kt)("inlineCode",{parentName:"p"},".followUp()")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},".reply()"),"."),(0,o.kt)("p",null,"If you want to get rid of this automatic deferring, you can disable it in the general config file (",(0,o.kt)("inlineCode",{parentName:"p"},"src/config/general"),")."),(0,o.kt)("p",null,"There's also the ",(0,o.kt)("inlineCode",{parentName:"p"},"replyToInteraction()")," util function that abstract the response to either an interaction or a simple command message. "),(0,o.kt)("h2",{id:"built-in-commands"},"Built-in commands"),(0,o.kt)("p",null,"There are several built-in slash commands:"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"general",label:"General",mdxType:"TabItem"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Command name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"help")),(0,o.kt)("td",{parentName:"tr",align:null},"Get all the commands and their descriptions, grouped by categories")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"info")),(0,o.kt)("td",{parentName:"tr",align:null},"Show general information about the bot")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"invite")),(0,o.kt)("td",{parentName:"tr",align:null},"Give the link to invite the bot on any server")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ping")),(0,o.kt)("td",{parentName:"tr",align:null},"Pong!")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"stats")),(0,o.kt)("td",{parentName:"tr",align:null},"Display stats like total amount of users using the bot, number of guilds, etc"))))),(0,o.kt)(l.Z,{value:"admin",label:"Admin",mdxType:"TabItem"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Command name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"prefix")),(0,o.kt)("td",{parentName:"tr",align:null},"Change the prefix of the bot on the guild"))))),(0,o.kt)(l.Z,{value:"owner",label:"Owner",mdxType:"TabItem"},(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Command name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"maintenance")),(0,o.kt)("td",{parentName:"tr",align:null},"Toggle on/off maintenance mode")))))))}u.isMDXComponent=!0}}]);