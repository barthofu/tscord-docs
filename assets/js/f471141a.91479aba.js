"use strict";(self.webpackChunktscord_docs=self.webpackChunktscord_docs||[]).push([[722],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),i=n(6010),r="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return m}});var a=n(7462),i=n(7294),r=n(6010),o=n(2389),l=n(7392),s=n(7094),c=n(2466),p="tabList__CuJ",d="tabItem_LNqP";function u(e){var t,n,o=e.lazy,u=e.block,m=e.defaultValue,h=e.values,f=e.groupId,v=e.className,k=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=h?h:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),N=(0,l.l)(g,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(t=null!=m?m:null==(n=k.find((function(e){return e.props.default})))?void 0:n.props.value)?t:k[0].props.value;if(null!==y&&!g.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,s.U)(),w=b.tabGroupChoices,C=b.setTabGroupChoices,x=(0,i.useState)(y),T=x[0],E=x[1],O=[],z=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var S=w[f];null!=S&&S!==T&&g.some((function(e){return e.value===S}))&&E(S)}var I=function(e){var t=e.currentTarget,n=O.indexOf(t),a=g[n].value;a!==T&&(z(t),E(a),null!=f&&C(f,String(a)))},L=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,i=O.indexOf(e.currentTarget)+1;n=null!=(a=O[i])?a:O[0];break;case"ArrowLeft":var r,o=O.indexOf(e.currentTarget)-1;n=null!=(r=O[o])?r:O[O.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",p)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":u},v)},g.map((function(e){var t=e.value,n=e.label,o=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return O.push(e)},onKeyDown:L,onFocus:I,onClick:I},o,{className:(0,r.Z)("tabs__item",d,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),o?(0,i.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function m(e){var t=(0,o.Z)();return i.createElement(u,(0,a.Z)({key:String(t)},e))}},8317:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return m}});var a,i=n(7462),r=n(3366),o=(n(7294),n(3905)),l=n(5488),s=(n(5162),["components"]),c={sidebar_position:2},p="Internationalization (i18n)",d={unversionedId:"features/internationalization",id:"features/internationalization",title:"Internationalization (i18n)",description:"",source:"@site/docs/features/internationalization.mdx",sourceDirName:"features",slug:"/features/internationalization",permalink:"/tscord-docs/docs/features/internationalization",draft:!1,editUrl:"https://github.com/barthofu/tscord-docs/tree/main/docs/features/internationalization.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Backups",permalink:"/tscord-docs/docs/features/database/backups"},next:{title:"Scheduler",permalink:"/tscord-docs/docs/features/scheduler"}},u={},m=[{value:"Write translations",id:"write-translations",level:2},{value:"Use translations",id:"use-translations",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"Locale extractor",id:"locale-extractor",level:3},{value:"Automatic detection",id:"automatic-detection",level:3},{value:"Discord-side translation",id:"discord-side-translation",level:2}],h=(a="Tab",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),f={toc:m};function v(e){var t=e.components,n=(0,r.Z)(e,s);return(0,o.kt)("wrapper",(0,i.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"internationalization-i18n"},"Internationalization (i18n)"),(0,o.kt)("p",null,"Internationalization is the process to provide automated translations based on locales (languages) extracted from any user input."),(0,o.kt)("p",null,"TSCord uses the excellent ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/ivanhofer/typesafe-i18n"},"typesafe-i18n"))," package, that provides a fully typed translation system, with string templating and many more!"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Click ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/ivanhofer/typesafe-i18n#table-of-contents"},"here"))," to view its documentation and understand how it works"))),(0,o.kt)("p",null,"In fact, this library is a program that will watch your translation files. If it detects any change, it will re-generate a type file in consequence. This is how it achieves complete typesafety!"),(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Even if this system is good, it is known to be really slow and painful with a ",(0,o.kt)("strong",{parentName:"p"},"really")," large translation codebase. I however chose it because a simple discord bot, except for particular cases, will never reach this limit."))),(0,o.kt)("p",null,'This "program" can be launched as a standalone using ',(0,o.kt)("inlineCode",{parentName:"p"},"npm run dev:i18"),", but anyway it is runned in parallel of the bot when using the ",(0,o.kt)("inlineCode",{parentName:"p"},"npm run dev")," command!"),(0,o.kt)("h2",{id:"write-translations"},"Write translations"),(0,o.kt)("p",null,"You first need to choose a ",(0,o.kt)("strong",{parentName:"p"},"base translation language"),". It is from this language and file that ",(0,o.kt)("inlineCode",{parentName:"p"},"typesafe-i18n")," will generate the type file.\nBy default, TSCord have two translation languages : "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"en")," (default)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fr"))),(0,o.kt)("p",null,"Their translation file are respectively located in:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"src/i18n/en/index.ts")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"src/i18n/fr/index.ts"))),(0,o.kt)("p",null,"Your workflow should be as follow:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Edit the ",(0,o.kt)("strong",{parentName:"li"},"base translation language")," file first (",(0,o.kt)("inlineCode",{parentName:"li"},"en")," by default) as you need"),(0,o.kt)("li",{parentName:"ol"},"Run the generator with either ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run dev:i18n")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run dev")),(0,o.kt)("li",{parentName:"ol"},"Then, when the type file is updated, you can edit the other language translation files without errors"),(0,o.kt)("li",{parentName:"ol"},"If you still have errors displayed in your editor, restart the Typescript Server if your IDE")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"E.g:")),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(h,{label:"en",value:"en",mdxType:"Tab"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/i18n/en/index.ts",title:"src/i18n/en/index.ts"},"import type { BaseTranslation } from \"../i18n-types\"\n\nconst en: BaseTranslation = {\n\n    GREET: 'Hello!'\n}\n\nexport default en\n"))),(0,o.kt)(h,{label:"fr",value:"fr",mdxType:"Tab"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/i18n/fr/index.ts",title:"src/i18n/fr/index.ts"},"import type { Translation } from \"../i18n-types\"\n\nconst fr: Translation = {\n\n    GREET: 'Bonjour !'\n}\n\nexport default fr\n")))),(0,o.kt)("h2",{id:"use-translations"},"Use translations"),(0,o.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,o.kt)("p",null,"To use translations, nothing more simple:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { L } from '@i18n'\n\nconst locale = 'en'\n\nconsole.log(L[locale]['GREET']()) // -> Hello!\n")),(0,o.kt)("h3",{id:"locale-extractor"},"Locale extractor"),(0,o.kt)("p",null,"TSCord have a built-in function to extract a valid locale from any discord interaction:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Discord, Slash } from 'discordx'\nimport { CommandInteraction } from 'discord.js'\n\nimport { L, getLocaleFromInteraction } from '@i18n'\n\n@Discord()\nclass Example {\n\n    @Slash({ name: 'greet' })\n    async greet(\n        interaction: CommandInteraction\n    ) {\n        \n        const locale = getLocaleFromInteraction(interaction)\n\n        // will respond 'Hello!' to a user who have his discord client in english, \n        // and 'Bonjour !' to a french one.\n        interaction.followUp(L[locale]['GREET']()) \n    }\n}\n")),(0,o.kt)("h3",{id:"automatic-detection"},"Automatic detection"),(0,o.kt)("p",null,"And that's not all!\nWe've automated this process to free you from importing ",(0,o.kt)("inlineCode",{parentName:"p"},"L")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"getLocaleFromInteraction")," in nearly every files."),(0,o.kt)("p",null,"In fact, every interaction handler will automaticaly receive the locale and localized ",(0,o.kt)("inlineCode",{parentName:"p"},"L")," function as an auto injected parameter as follow:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { Discord, Slash } from 'discordx'\nimport { CommandInteraction } from 'discord.js'\n\nimport { L, getLocaleFromInteraction } from '@i18n'\n\n@Discord()\nclass Example {\n\n    @Slash({ name: 'greet' })\n    async greet(\n        interaction: CommandInteraction,\n        client: Client, // -> if you want to use these auto injected data, you MUST put the client because discordx injects it anyway!\n                        // if you don't, then the object passed as the InteractionData one will be in fact the client \u2620\ufe0f\n        // highlight-next-line\n        { sanitizedLocale, localize }: InteractionData\n    ) {\n        \n        console.log(sanitizedLocale) // -> en\n\n        interaction.followUp(localize['GREET']()) // -> 'Hello!'\n    }\n}\n")),(0,o.kt)("h2",{id:"discord-side-translation"},"Discord-side translation"),(0,o.kt)("p",null,"Quite recently, Discord has made available the possibility to submit multiple ",(0,o.kt)("em",{parentName:"p"},"name")," and ",(0,o.kt)("em",{parentName:"p"},"description")," depending on the language of the user's client.\nSo for example, you can submit a slash command with a name of ",(0,o.kt)("strong",{parentName:"p"},"hello")," for english users and ",(0,o.kt)("strong",{parentName:"p"},"bonjour")," for french users (the english one should also be the fallback language for the one you haven't referenced)."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://discord.com/developers/docs/interactions/application-commands#localization"},"Official Discord documentation on localized components")))),(0,o.kt)("p",null,'this is the "raw" way of doing that with ',(0,o.kt)("inlineCode",{parentName:"p"},"discordx"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"@Slash({\n    name: 'hello',\n    nameLocalizations: {\n        en: 'hello',\n        fr: 'bonjour'\n    },\n    description: {\n        en: 'Reply hello to the user',\n        fr: 'R\xe9pond bonjour \xe0 l\\'utilisateur'\n    }\n})\n//...\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"@Slash")," should be imported from '@decorators', as explained on ",(0,o.kt)("a",{parentName:"p",href:"/docs/discord/interactions"},"this page")))),(0,o.kt)("p",null,"But to avoid having to put this text-heavy thing in the code, we recommand you to put these in the translation files.\nThen, you have 2 ways to reference it on the ",(0,o.kt)("em",{parentName:"p"},"Slash")," (or ",(0,o.kt)("em",{parentName:"p"},"ContexMenus"),", or ",(0,o.kt)("em",{parentName:"p"},"SlashOption"),", etc...) decorators:"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(h,{label:"localizationSource",value:"localization-source",mdxType:"Tab"},(0,o.kt)("p",null,"We added an optional ",(0,o.kt)("inlineCode",{parentName:"p"},"localizationSource")," property to the component decorators.\nIt will automaticaly seek a ",(0,o.kt)("inlineCode",{parentName:"p"},"NAME")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"DESCRIPTION")," property at the given path in the translation file."),(0,o.kt)("p",null,"For example, this code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"\n@Slash({\n    name: 'hello',\n    localizationSource: 'COMMANDS.HELLO'\n})\n//...\n\n")),(0,o.kt)("p",null,"Will search translations at ",(0,o.kt)("inlineCode",{parentName:"p"},"COMMANDS.HELLO.NAME")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"nameLocalizations")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"COMMANDS.HELLO.DESCRIPTION")," for ",(0,o.kt)("inlineCode",{parentName:"p"},"descriptionLocalizations"),".")),(0,o.kt)(h,{label:"name",value:"name",mdxType:"Tab"},(0,o.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Only for ",(0,o.kt)("inlineCode",{parentName:"p"},"@Slash")))),(0,o.kt)("p",null,"If no ",(0,o.kt)("inlineCode",{parentName:"p"},"localizationSource")," is provided, the ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," property will be used as the localization source."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"E.g:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"@Slash({\n    name: 'hello'\n})\n")),(0,o.kt)("p",null,"Will search translations at ",(0,o.kt)("inlineCode",{parentName:"p"},"COMMANDS.HELLO.NAME")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"COMMANDS.HELLO.DESCRIPTION"),"."))))}v.isMDXComponent=!0}}]);