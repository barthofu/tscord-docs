"use strict";(self.webpackChunktscord_docs=self.webpackChunktscord_docs||[]).push([[6425],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,k=u["".concat(s,".").concat(m)]||u[m]||c[m]||a;return n?r.createElement(k,i(i({ref:t},d),{},{components:n})):r.createElement(k,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},25344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={sidebar_position:50},i="CI/CD",l={unversionedId:"bot/devops/ci-cd",id:"version-2.3/bot/devops/ci-cd",title:"CI/CD",description:"TSCord bundles itself with a complete setup for Github Actions!",source:"@site/versioned_docs/version-2.3/bot/devops/ci-cd.mdx",sourceDirName:"bot/devops",slug:"/bot/devops/ci-cd",permalink:"/docs/2.3/bot/devops/ci-cd",draft:!1,editUrl:"https://github.com/barthofu/tscord-docs/tree/main/versioned_docs/version-2.3/bot/devops/ci-cd.mdx",tags:[],version:"2.3",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"Debug with VSCode",permalink:"/docs/2.3/bot/devops/debug-with-vscode"},next:{title:"Deployment",permalink:"/docs/2.3/bot/devops/deployment"}},s={},p=[{value:"Configuration",id:"configuration",level:2},{value:"Secrets",id:"secrets",level:3},{value:"Workflow config file",id:"workflow-config-file",level:3}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cicd"},"CI/CD"),(0,o.kt)("p",null,"TSCord bundles itself with a complete setup for ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/features/actions"},"Github Actions")),"!"),(0,o.kt)("p",null,"Github Actions lets you automate your workflow for building, testing and deploying your application."),(0,o.kt)("p",null,"More concretely, the provided config will permit you to deploy your bot to a SSH accessible remote machine (like a VPS) on precise events, like the creation of a tag on Github, a push to the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," branch, on demand, etc..."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("h3",{id:"secrets"},"Secrets"),(0,o.kt)("p",null,"First, you need to setup some ",(0,o.kt)("em",{parentName:"p"},"secrets")," in the settings of your github repo (",(0,o.kt)("strong",{parentName:"p"},"Settings")," > ",(0,o.kt)("strong",{parentName:"p"},"Secrets")," > ",(0,o.kt)("strong",{parentName:"p"},"Actions"),")."),(0,o.kt)("p",null,"From there, add the following secrets (don't worry, after you've set a secret nobody will be able to read it):"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"IP")),(0,o.kt)("td",{parentName:"tr",align:null},"The IP of the machine that will host your bot")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"PORT")),(0,o.kt)("td",{parentName:"tr",align:null},"Put ",(0,o.kt)("inlineCode",{parentName:"td"},"22")," (SSH port)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"USER")),(0,o.kt)("td",{parentName:"tr",align:null},"Name of the host user to connect as")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"PASSWORD")),(0,o.kt)("td",{parentName:"tr",align:null},"Password of the host user to connect as")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"PROJECT_PATH")),(0,o.kt)("td",{parentName:"tr",align:null},"The absolute path to your project on the host")))),(0,o.kt)("p",null,"If you want to use SSH private key with passphrase instead of a regular password, you'll need to add 2 more secrets:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"KEY")),(0,o.kt)("td",{parentName:"tr",align:null},"Raw content of SSH private key")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"PASSPHRASE")),(0,o.kt)("td",{parentName:"tr",align:null},"SSH key passphrase")))),(0,o.kt)("p",null,"And then edit the following file like that:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:"title=.github/workflows/deploy.yml",title:".github/workflows/deploy.yml"},"        with:\n            host: ${{ secrets.IP }}\n            username: ${{ secrets.USERNAME }}\n            // remove-next-line\n            password: ${{ secrets.PASSWORD }}\n            // remove-next-line\n            # key: ${{ secrets.KEY }}\n            // remove-next-line\n            # passphrase: ${{ secrets.PASSPHRASE }}\n            // add-next-line\n            # password: ${{ secrets.PASSWORD }}\n            // add-next-line\n            key: ${{ secrets.KEY }}\n            // add-next-line\n            passphrase: ${{ secrets.PASSPHRASE }}\n            port: ${{ secrets.PORT }}\n")),(0,o.kt)("h3",{id:"workflow-config-file"},"Workflow config file"),(0,o.kt)("p",null,"Then, you can customize the behavior in the ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows/deploy.yml")," config file."),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To know how to use Github Actions config files, ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions"},"check the doc here")),".")),(0,o.kt)("p",null,"By default, the deploy workflow is only triggerable on-demand (",(0,o.kt)("strong",{parentName:"p"},"Actions")," > ",(0,o.kt)("strong",{parentName:"p"},"Deploy (SSH)")," > ",(0,o.kt)("strong",{parentName:"p"},"Run workflow"),").",(0,o.kt)("br",null),"\nWe recommand you to either add a trigger on release tag creation or on pushes on your ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," branch, depending on your global git workflow."),(0,o.kt)("p",null,"Also, by default, the deploy action will use ",(0,o.kt)("strong",{parentName:"p"},"Docker"),", but you can easily replace it with ",(0,o.kt)("strong",{parentName:"p"},"PM2"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml",metastring:"title=.github/workflows/deploy.yml",title:".github/workflows/deploy.yml"},"        script: |\n            cd $PROJECT_PATH\n            git pull https://github.com/barthofu/tscord-template.git main\n            // remove-next-line\n            docker-compose up -d --build\n            // add-next-line\n            pm2 restart pm2.config.json\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Each line under the ",(0,o.kt)("inlineCode",{parentName:"p"},"script")," property is a command that'll be run on your host machine. You can customize it as you want!")))}c.isMDXComponent=!0}}]);