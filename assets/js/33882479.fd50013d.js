"use strict";(self.webpackChunktscord_template_docs=self.webpackChunktscord_template_docs||[]).push([[560],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),f=a,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1863:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:3},c="Sync",l={unversionedId:"features/database/sync",id:"features/database/sync",title:"Sync",description:"Guilds",source:"@site/docs/features/database/sync.md",sourceDirName:"features/database",slug:"/features/database/sync",permalink:"/tscord-template-docs/docs/features/database/sync",draft:!1,editUrl:"https://github.com/barthofu/tscord-template-docs/tree/main/docs/features/database/sync.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Migrations",permalink:"/tscord-template-docs/docs/features/database/migrations"},next:{title:"Single Data Type",permalink:"/tscord-template-docs/docs/features/database/single-data-type"}},u={},d=[{value:"Guilds",id:"guilds",level:2},{value:"Users",id:"users",level:2}],p={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sync"},"Sync"),(0,o.kt)("h2",{id:"guilds"},"Guilds"),(0,o.kt)("p",null,"TSCord constantly synchronizes guilds between Discord and the database."),(0,o.kt)("p",null,"This synchronization happens at each startup, so even if the bot is offline and doesn't track some ",(0,o.kt)("inlineCode",{parentName:"p"},"guildCreate")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"guildDelete")," events, it will compare the database and the discord client guilds list to keep it up to date."),(0,o.kt)("p",null,"Deleted guilds aren't ",(0,o.kt)("em",{parentName:"p"},"actualy")," deleted, they're ",(0,o.kt)("inlineCode",{parentName:"p"},"deleted")," boolean property in the database is simply set to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),".\nThis is really useful as a guild doesn't loose its data if they remove and then re-add the bot."),(0,o.kt)("h2",{id:"users"},"Users"),(0,o.kt)("p",null,"Each time an unknown user interact with the bot, it'll create a new user in the database."),(0,o.kt)("p",null,"So the database contains all users that have been interacting at least once with the bot."))}f.isMDXComponent=!0}}]);