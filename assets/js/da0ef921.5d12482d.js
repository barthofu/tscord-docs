"use strict";(self.webpackChunktscord_template_docs=self.webpackChunktscord_template_docs||[]).push([[863],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9347:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],s={sidebar_position:1},l="ORM",c={unversionedId:"features/database/orm",id:"features/database/orm",title:"ORM",description:"What is en ORM?",source:"@site/docs/features/database/orm.md",sourceDirName:"features/database",slug:"/features/database/orm",permalink:"/tscord-template-docs/docs/features/database/orm",draft:!1,editUrl:"https://github.com/barthofu/tscord-template-docs/tree/main/docs/features/database/orm.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Activities",permalink:"/tscord-template-docs/docs/discord/activities"},next:{title:"Migrations",permalink:"/tscord-template-docs/docs/features/database/migrations"}},p={},u=[{value:"What is en ORM?",id:"what-is-en-orm",level:2},{value:"Mikro-ORM",id:"mikro-orm",level:2},{value:"Entities",id:"entities",level:3},{value:"For more informations on how to use Mikro-ORM, check their official documentation here",id:"for-more-informations-on-how-to-use-mikro-orm-check-their-official-documentation-here",level:4}],m={toc:u};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"orm"},"ORM"),(0,i.kt)("h2",{id:"what-is-en-orm"},"What is en ORM?"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Object-relational_mapping"},"Object-Relational Mapping"),' (ORM) is a technique that lets you query and manipulate data from a database using an object-oriented paradigm. When talking about ORM, most people are referring to a library that implements the Object-Relational Mapping technique, hence the phrase "an ORM".'),(0,i.kt)("p",null,"An ORM library is a completely ordinary library written in your language of choice that encapsulates the code needed to manipulate the data, so you don't use SQL anymore; you interact directly with an object in the same language you're using.$"),(0,i.kt)("h2",{id:"mikro-orm"},"Mikro-ORM"),(0,i.kt)("p",null,"TSCord uses ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://mikro-orm.io/"},"Mikro-ORM")),", an efficient battle-tested ORM library for Nodejs."),(0,i.kt)("h3",{id:"entities"},"Entities"),(0,i.kt)("p",null,"One big interest of an ORM is that you ",(0,i.kt)("strong",{parentName:"p"},"never")," touch the database, even when creating new tables."),(0,i.kt)("p",null,"Indeed, tables are represented by ",(0,i.kt)("strong",{parentName:"p"},"entities"),", which are plain Typescript classes using the ",(0,i.kt)("em",{parentName:"p"},"decorator")," syntax to provide a simple yet efficient way to build them."),(0,i.kt)("p",null,"Example of a simple entity:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/entities/User.ts",title:"src/entities/User.ts"},"import { Entity, PrimaryKey, Property } from '@mikro-orm/core'\nimport { CustomBaseEntity } from './BaseEntity'\n\n@Entity()\nexport class User extends CustomBaseEntity {\n\n    @PrimaryKey({ autoincrement: false })\n    id: string\n\n    @Property()\n    name: string\n\n}\n")),(0,i.kt)("p",null,"Some explanations:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Every entity must be placed in the ",(0,i.kt)("inlineCode",{parentName:"li"},"src/entities")," directory and be exported in the ",(0,i.kt)("inlineCode",{parentName:"li"},"src/entities/index.ts")," file."),(0,i.kt)("li",{parentName:"ul"},"Every entity class should be decorated with ",(0,i.kt)("inlineCode",{parentName:"li"},"@Entity()"),"."),(0,i.kt)("li",{parentName:"ul"},"Every entity must extends ",(0,i.kt)("inlineCode",{parentName:"li"},"CustomBaseEntity"),", which will add ",(0,i.kt)("em",{parentName:"li"},"createdAt")," and ",(0,i.kt)("em",{parentName:"li"},"updatedAt")," properties."),(0,i.kt)("li",{parentName:"ul"},"Every attribute of the class marked with the ",(0,i.kt)("inlineCode",{parentName:"li"},"@Property()")," decorator will be a property in the database table."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"@PrimaryKey()")," decorator is used to define entity's unique primary key identifier.")),(0,i.kt)("h4",{id:"for-more-informations-on-how-to-use-mikro-orm-check-their-official-documentation-here"},"For more informations on how to use Mikro-ORM, check their ",(0,i.kt)("a",{parentName:"h4",href:"https://mikro-orm.io/docs/"},"official documentation here")))}d.isMDXComponent=!0}}]);